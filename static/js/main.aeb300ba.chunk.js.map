{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","console","log","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,kBAAO,SAAAC,GAClB,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACvB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCLbC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAE,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJ/CM,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aACnC,OACA,uBAAOC,KAAK,SACZb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCyCCG,E,kDA3Cb,aAAc,IAAD,8BACX,gBAmBFH,aAAc,SAAAI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAnBpC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IAJH,E,gEAQO,IAAD,OAEjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,2CAKrCC,QAAQC,IAAIC,KAAKR,MAAMH,e,+BAOhB,IAAD,EAEuBW,KAAKR,MAA3Bb,EAFD,EAECA,SAASU,EAFV,EAEUA,YACVY,EAAiBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAciB,KAAKjB,eACnB,cAAC,EAAD,CAAUJ,SAAUsB,W,GAtCRI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.aeb300ba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = props =>{\r\n  return (\r\n    <div className='card-container'>\r\n        <img alt=\"monsters\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) =>{\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster=><Card key={monster.id} monster={monster}/>)}\r\n        </div> \r\n    );\r\n}\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) =>{\r\n    return (\r\n    <input type='search' \r\n    className=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n  );\r\n}\r\n","import './App.css';\nimport React,{Component} from 'react';\nimport {CardList} from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\nclass App extends Component{\n  constructor(){\n    super();//it calls the constructor methods in the component class\n    this.state = {\n      monsters:[],\n      searchField:''\n    };\n  }\n    \n  componentDidMount(){\n    //console.log('component did mount is called');\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n  \n  componentDidUpdate(){\n    //console.log('component did update is called');\n    console.log(this.state.searchField);\n  }\n\n  handleChange= e =>{\n    this.setState({searchField:e.target.value})\n  }\n\n  render(){\n\n    const {monsters,searchField}=this.state;\n    const filterMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n    return(\n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n      placeholder='Search Monsters' \n      handleChange={this.handleChange}/>\n      <CardList monsters={filterMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}